From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nopjmp <kthompson@hey.com>
Date: Mon, 20 Dec 2021 19:16:11 -0600
Subject: [PATCH] (Dionysus) Use more fastutil data structures

Use them in more places.

diff --git a/src/main/java/net/minecraft/server/network/HandshakeListener.java b/src/main/java/net/minecraft/server/network/HandshakeListener.java
index 82540af8170f0b8cb52b13061ae8f956f1a6e46f..7996e12120752cae66c5f9e8467d6585423ab01f 100644
--- a/src/main/java/net/minecraft/server/network/HandshakeListener.java
+++ b/src/main/java/net/minecraft/server/network/HandshakeListener.java
@@ -12,8 +12,12 @@ import net.minecraft.network.protocol.login.PacketLoginOutDisconnect;
 import net.minecraft.server.MinecraftServer;
 
 // CraftBukkit start
+import it.unimi.dsi.fastutil.objects.Object2LongMap;
+import it.unimi.dsi.fastutil.objects.Object2LongOpenHashMap;
+
 import java.net.InetAddress;
-import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
 // CraftBukkit end
 
 public class HandshakeListener implements PacketHandshakingInListener {
@@ -24,7 +28,7 @@ public class HandshakeListener implements PacketHandshakingInListener {
     static final java.util.regex.Pattern PROP_PATTERN = java.util.regex.Pattern.compile("\\w{0,16}");
     // Spigot end
     // CraftBukkit start - add fields
-    private static final HashMap<InetAddress, Long> throttleTracker = new HashMap<InetAddress, Long>();
+    private static final Object2LongOpenHashMap<InetAddress> throttleTracker = new Object2LongOpenHashMap<>();
     private static int throttleCounter = 0;
     // CraftBukkit end
     private static final IChatBaseComponent a = new ChatComponentText("Ignoring status request");
@@ -50,7 +54,7 @@ public class HandshakeListener implements PacketHandshakingInListener {
                     InetAddress address = ((java.net.InetSocketAddress) this.c.getSocketAddress()).getAddress();
 
                     synchronized (throttleTracker) {
-                        if (throttleTracker.containsKey(address) && !"127.0.0.1".equals(address.getHostAddress()) && currentTime - throttleTracker.get(address) < connectionThrottle) {
+                        if (throttleTracker.containsKey(address) && !"127.0.0.1".equals(address.getHostAddress()) && currentTime - throttleTracker.getLong(address) < connectionThrottle) {
                             throttleTracker.put(address, currentTime);
                             IChatBaseComponent chatmessage = org.bukkit.craftbukkit.util.CraftChatMessage.fromString(com.destroystokyo.paper.PaperConfig.connectionThrottleKickMessage, true)[0]; // Paper - Configurable connection throttle kick message // Paper - Fix hex colors not working in some kick messages
                             this.c.sendPacket(new PacketLoginOutDisconnect(chatmessage));
@@ -64,13 +68,7 @@ public class HandshakeListener implements PacketHandshakingInListener {
                             throttleCounter = 0;
 
                             // Cleanup stale entries
-                            java.util.Iterator iter = throttleTracker.entrySet().iterator();
-                            while (iter.hasNext()) {
-                                java.util.Map.Entry<InetAddress, Long> entry = (java.util.Map.Entry) iter.next();
-                                if (entry.getValue() > connectionThrottle) {
-                                    iter.remove();
-                                }
-                            }
+                            throttleTracker.object2LongEntrySet().removeIf(entry -> entry.getLongValue() > connectionThrottle); // Dionysus
                         }
                     }
                     } // Paper - add closing bracket for if check above
