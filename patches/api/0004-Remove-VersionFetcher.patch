From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: foss-mc <69294560+foss-mc@users.noreply.github.com>
Date: Mon, 19 Apr 2021 10:51:32 +0000
Subject: [PATCH] Remove VersionFetcher

Original patch from https://github.com/PatinaMC/Patina

diff --git a/src/main/java/org/bukkit/command/defaults/VersionCommand.java b/src/main/java/org/bukkit/command/defaults/VersionCommand.java
index e0596ea71c517199bacfc122d23b3a195e3d6ba8..04eb95c0af23d6ce4e42f46cb81bbf0c3ecaa598 100644
--- a/src/main/java/org/bukkit/command/defaults/VersionCommand.java
+++ b/src/main/java/org/bukkit/command/defaults/VersionCommand.java
@@ -1,6 +1,6 @@
 package org.bukkit.command.defaults;
 
-import com.destroystokyo.paper.util.VersionFetcher; // Paper - version supplier
+//import com.destroystokyo.paper.util.VersionFetcher; // Paper - version supplier // Patina - Remove VersionFetcher
 import com.google.common.base.Charsets;
 import com.google.common.collect.ImmutableList;
 import com.google.common.io.Resources;
@@ -28,14 +28,14 @@ import org.bukkit.util.StringUtil;
 import org.jetbrains.annotations.NotNull;
 
 public class VersionCommand extends BukkitCommand {
-    private VersionFetcher versionFetcher;
+    /*private VersionFetcher versionFetcher; // Patina - Remove VersionFetcher
     private VersionFetcher getVersionFetcher() { // lazy load because unsafe isn't available at command registration
         if (versionFetcher == null) {
             versionFetcher = Bukkit.getUnsafe().getVersionFetcher();
         }
 
         return versionFetcher;
-    }
+    }*/
 
     public VersionCommand(@NotNull String name) {
         super(name);
@@ -52,7 +52,8 @@ public class VersionCommand extends BukkitCommand {
 
         if (args.length == 0) {
             //sender.sendMessage("This server is running " + Bukkit.getName() + " version " + Bukkit.getVersion() + " (Implementing API version " + Bukkit.getBukkitVersion() + ")"); // Paper - moved to setVersionMessage
-            sendVersion(sender);
+            sender.sendMessage("Running " + Bukkit.getName() + " version " + Bukkit.getVersion() + " (API version " + Bukkit.getBukkitVersion() + ")"); // Patina // Lazinity
+            //sendVersion(sender); // Patina - Remove VersionFetcher
         } else {
             StringBuilder name = new StringBuilder();
 
@@ -155,7 +156,7 @@ public class VersionCommand extends BukkitCommand {
         return ImmutableList.of();
     }
 
-    private final ReentrantLock versionLock = new ReentrantLock();
+    /*private final ReentrantLock versionLock = new ReentrantLock(); // Patina - Remove VersionFetcher
     private boolean hasVersion = false;
     private Component versionMessage = null; // Paper
     private final Set<CommandSender> versionWaiters = new HashSet<CommandSender>();
@@ -203,7 +204,7 @@ public class VersionCommand extends BukkitCommand {
             return;
         }
         setVersionMessage(getVersionFetcher().getVersionMessage(version));
-        /*
+        /\Patina\*
         if (version == null) version = "Custom";
         String[] parts = version.substring(0, version.indexOf(' ')).split("-");
         if (parts.length == 4) {
@@ -233,7 +234,7 @@ public class VersionCommand extends BukkitCommand {
         } else {
             setVersionMessage("Unknown version, custom build?");
         }
-         */
+         *\Patina\/
         // Paper end
     }
 
@@ -283,5 +284,5 @@ public class VersionCommand extends BukkitCommand {
             e.printStackTrace();
             return -1;
         }
-    }
+    }*/
 }
